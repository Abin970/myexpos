//	IP+2	<----SP
//	Return Value
//	Arg3
//	Arg2
//	Arg1
//	sys call num
//R15="int11";
//print R15;
alias syscall_num R1;
alias ret R5;
alias userSP R0;
userSP=SP;
ret=[PTBR+2*((SP-1)/512)]*512+(SP-1)%512;
//SP-5
syscall_num=[PTBR + 2*((SP-5)/512)]*512+(SP-5)%512;
syscall_num=[syscall_num];

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13] = SP;

SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 - 1;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9]=syscall_num;

//Getpid
if(syscall_num==11) then
	[ret]=[SYSTEM_STATUS_TABLE+1];
endif;

//Getppid
if(syscall_num==12) then
	[ret]=[PROCESS_TABLE +[SYSTEM_STATUS_TABLE+1]*16 +2];
endif;

//Wait
//arg1=waitPID
if(syscall_num==13) then
	alias waitPID R2;
	waitPID=[PTBR+2*((userSP-4)/512)]*512+(userSP-4)%512;
	waitPID=[waitPID];
	if(0<waitPID && waitPID<16 && waitPID!=[SYSTEM_STATUS_TABLE +1] && [PROCESS_TABLE+waitPID*16+ 4]!=TERMINATED) then
		[PROCESS_TABLE+ [SYSTEM_STATUS_TABLE+1]*16 + 4]=WAIT_PROCESS;
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 5]=waitPID;
		multipush(R0,R1,R2,R3,R4,R5);
		call MOD_5;
		multipop(R0,R1,R2,R3,R4,R5);
		[ret]=0;
	else
	[ret]=-1;
	endif;
endif;

//Signal
if(syscall_num==14) then
	alias PID R14;
	PID=1;
	while(PID<16) do
		if([PROCESS_TABLE + PID*16 + 4]==WAIT_PROCESS && [PROCESS_TABLE + PID*16 + 5]==[SYSTEM_STATUS_TABLE+1]) then
			[PROCESS_TABLE + PID*16 + 4]=READY;
			[PROCESS_TABLE + PID*16 + 5]=-1;
		endif;
	PID=PID+1;
	endwhile;
	[ret]=0;
endif;

SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9]=0;

ireturn;
